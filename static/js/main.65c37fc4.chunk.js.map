{"version":3,"sources":["logo.svg","components/Graficos.jsx","components/SellsBuys.jsx","components/Exchanges.jsx","components/ConectarWebsocket.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Graficos","props","data","data3","data2","filter","d","ticker","align","company_name","className","frame","border-width","width","height","margin","top","right","bottom","left","type","dataKey","stroke","fill","label","value","marginTop","position","quote_base","angle","SellsBuys","data4","sells","buys","updates","valores_updates","max","map","Math","min","ultimo_sells","length","ultimo_buys","valor","toFixed","divStyle","color","scope","country","volume","style","Exchanges","reduce","tot","arr","socket","io","protocolo","path","ConectarWebsocket","useState","booleano","setBooleano","data_update","setData_update","data_sell","setData_sell","data_buy","setData_buy","data_exchanges","data_stocks","setData_stocks","useEffect","on","info","llega","time","concat","emit","Object","values","i","seleccionada","setSeleccionada","id","float","onClick","connect","disconnect","onChange","document","getElementById","class","border","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.65c37fc4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState} from 'react';\nimport { AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport './../App.css';\nimport moment from 'moment';\n\nconst Graficos = (props) => {\n\n    const data = props.data;\n    const data2 = props.data2;\n\n    const data3 = data2.filter((d) => d.ticker === data.ticker );\n\n //   for(var i =0;i < data3.lenght; i++){\n   //     var t = new Date( data3[i].time );\n     //   var formatted = t.format(\"dd.MM.YYYY HH:mm\");\n       // data[i].time = formatted;}\n    \n    //const data3 = data4.map(d => {d.time = ((moment(new Date(d.time))).format(\"dd.MM.YYYY HH:mm\"))});\n\n    return(\n        <div> \n            <h1 align=\"center\">{data.ticker} - {data.company_name}</h1>\n            <table  className=\"Grafico\" align=\"center\" frame=\"box\" border-width=\"10px\">\n                <AreaChart width={700} height={300} data={data3} margin={{ top: 5, right: 20, bottom: 5, left: 10 }} >\n                    <Area type=\"monotone\" dataKey=\"value\" stroke=\"#282c34\" fill=\"#282c34\" />\n                    \n                    <XAxis stroke=\"#282c34\" dataKey=\"time\" label={{ value: \"Tiempo\", marginTop:\"320px\" , position:\"insideBottom\" }}/>\n                    <YAxis stroke=\"#282c34\" label={{ value: data.quote_base, angle: -90 , margin: \"0px\"}}/>\n                    <Tooltip />\n                </AreaChart>\n            </table>\n            <p align=\"center\">(los precios están en {data.quote_base})</p>\n            <p>{\"\\n\"}</p>\n        </div> \n    )\n\n};\n\nexport default Graficos;","import React, {useState} from 'react';\nimport './../App.css';\n\nconst SellsBuys = (props) => {\n\n    const data = props.data;\n    const data2 = props.data2;\n    const data3 = props.data3;\n    const data4 = props.data4;\n\n    const sells = data2.filter((d) => d.ticker === data.ticker );\n    const buys = data3.filter((d) => d.ticker === data.ticker );\n    const updates = data4.filter((d) => d.ticker === data.ticker );\n\n    var valores_updates = [];\n\n    var valores_updates = updates.map((d) => [...valores_updates, d.value]);\n\n    const max = Math.max(...valores_updates);\n    const min = Math.min(...valores_updates);\n\n    const ultimo_sells = sells.length - 1;\n    const ultimo_buys = buys.length - 1;\n    var valor = (updates.length >= 2 ? (100*((updates[updates.length - 1].value - updates[updates.length - 2].value)/updates[updates.length - 2].value)).toFixed(5) : 0);\n    let divStyle = {};\n    if(valor >=0){\n        divStyle = { color: \"darkgreen\" }};\n    if(valor<0){\n        divStyle = { color: \"darkred\" }};\n\n    return( \n        <tr>\n          <th align = \"center\" scope=\"row\">{data.company_name}</th>\n          <td align = \"center\">{data.ticker}</td>\n          <td align = \"center\">{data.country}</td>\n          <td align = \"center\">{ultimo_buys >= 0 && ultimo_sells >= 0 ? sells[ultimo_sells].volume + buys[ultimo_buys].volume : \"Ningún dato registrado\"}</td>\n          <td align = \"center\">{max ? \"$\"+max : \"Ningún dato registrado\"} {max ? data.quote_base : \"\"}</td>\n          <td align = \"center\">{min ? \"$\"+min : \"Ningún dato registrado\"} {min ? data.quote_base : \"\"}</td>\n          <td align = \"center\">{updates.length >= 1 ? \"$\"+updates[updates.length - 1].value : \"Ningún dato registrado\"} {updates.length >= 1 ? data.quote_base : \"\"}</td>\n          <td align = \"center\"><div style={divStyle} >{valor}%</div></td>\n        </tr>\n        \n    )\n\n};\n\nexport default SellsBuys;","import React, {useState} from 'react';\nimport './../App.css';\n\nconst Exchanges = (props) => {\n\n   // data={data_exchanges} data2={data_sell} data3={data_buy} data4={data_update}/>))}\n\n    const exchanges = props.data;\n    const sells = props.data2;\n    const buys = props.data3;\n\n    \n\n\n    //let suma_buys = 0;\n\n    var suma_buys = buys.reduce(function(tot, arr) { \n        return tot + arr.volume;\n      },0);\n  //  suma_buys = buys.map((d) => parseInt(suma_buys) + parseInt(d.volume));\n    //let suma_sells = 0;\n\n    var suma_sells = sells.reduce(function(tot, arr) { \n        return tot + arr.volume;\n      },0);\n    //suma_sells = sells.map((d) => parseInt(suma_sells) + parseInt(d.volume));\n\n    var suma_total = suma_buys + suma_sells;\n\n\n\n    \n\n\n\n    return( \n        <tr>\n          <th scope=\"row\">{}</th>\n          <td>{}</td>\n          <td>{}</td>\n          <td>{}</td>\n          <td>{}</td>\n          <td>{}</td>\n        </tr>\n        \n    )\n\n};\n\nexport default Exchanges;","import React, {useState, useEffect} from 'react';\nimport io from 'socket.io-client';\nimport Graficos from './Graficos';\nimport SellsBuys from './SellsBuys';\nimport Exchanges from './Exchanges';\n\n\nconst protocolo = \"wss://\";\nconst servidor = \"le-18262636.bitzonte.com\";\nconst ruta = \"/stocks\";\n\nconst socket = io(protocolo + servidor , {\n  path: ruta\n  });\n\n\nconst ConectarWebsocket = () => {\n\n    const [booleano, setBooleano] = useState(true);\n    const [data_update, setData_update] = useState([]);\n    const [data_sell, setData_sell] = useState([]);\n    const [data_buy, setData_buy] = useState([]);\n    const [data_exchanges, setData_exchanges] = useState([]);\n    const [data_stocks, setData_stocks] = useState([]);\n\n    let data_exchanges3 = {};\n\n\n\n    const cambio_bool = () => {\n      setBooleano(!booleano);\n      if(!booleano){\n        socket.connect();\n      }\n      if(booleano){\n        socket.disconnect();\n      }\n    }\n\n\n    function selec() {\n      setSeleccionada(document.getElementById(\"lista\").value);\n    }\n\n\n    useEffect(() => {\n        //if(booleano){\n        socket.on('UPDATE', info =>{\n            var llega = {time: info.time, value: info.value, ticker : info.ticker};\n            setData_update(data_update => data_update.concat(llega));\n        });\n//        if(!booleano){\n  //        socket.on('UPDATE', info =>{\n    //          var llega = {time: info.time, value: info.value, ticker : info.ticker};\n      //        setData_update(data_update => data_update.concat(llega));\n        //  })};\n        socket.on('SELL', info =>{\n            var llega = {time: info.time, volume: info.volume, ticker : info.ticker};\n            setData_sell(data_sell => data_sell.concat(llega));\n        });\n        socket.on('BUY', info =>{\n            var llega = {time: info.time, volume: info.volume, ticker : info.ticker};\n            setData_buy(data_buy => data_buy.concat(llega));\n        });\n        socket.emit(\"EXCHANGES\", ()=> {\n        });\n        socket.on('EXCHANGES', info =>{\n            const data = Object.values(info);\n           // data.map((d) => setData_exchanges(data_exchanges => [...data_exchanges, ...[d.name, d.exchange_ticker, d.listed_companies]));\n//            for(var i =0; i<data.length;i++){\n  //            setData_exchanges(data_exchanges => data_exchanges.concat(data[i]));}\n        });\n        socket.emit('STOCKS', () => {\n        } )\n        socket.on('STOCKS', info => { \n          for (var i = 0; i < info.length; i++) {\n            setData_stocks(data_stocks => data_stocks.concat(info[i]));\n          }\n        });\n    }, []);\n\n    let mercados = Object.values(data_exchanges3);\n\n\n    var menu = \"\";\n    var value = \"\";\n    \n    const [seleccionada, setSeleccionada] = useState('AAPL');\n\n    //\n\n    return(\n        <div>\n            \n            <div id=\"block_container\">\n              {data_stocks.map((d) => d.ticker === seleccionada ? (<div float=\"left\"><Graficos data={d} data2={data_update}/> </div>) : <div></div>)}\n              <div  align=\"center\" className=\"div_raro\">\n                <p className=\"exampleText\">{booleano ? \"Estas conectado\" : \"Estas desconectado, presiona el botón para conectarte\"}</p>\n                <button className=\"myButton\" align=\"center\" onClick = {() => cambio_bool()}>{booleano ? \"Desconectarse\" : \"Conectarse\"}</button>\n                <p> </p>\n                <p> </p>\n                <p> </p>\n                <p className=\"exampleText\">Selecciona la acción que quieres ver</p>\n                <select className=\"select-css\" id=\"lista\" onChange = {() => selec()}>\n                    {data_stocks.map((d) => <option value = {d.ticker}> {d.ticker}</option>)}\n                </select>\n              </div>          \n            </div>\n            <p>{\"\\n\\n\"}</p>\n            <table class=\"table table-striped table-dark\" align=\"center\" border=\"5\" frame=\"box\" >\n              <thead>\n                <tr>\n                  <th scope=\"col\">Compañía</th>\n                  <th scope=\"col\">Ticker</th>\n                  <th scope=\"col\">País</th>\n                  <th scope=\"col\">Volumen Transado</th>\n                  <th scope=\"col\">Máximo</th>\n                  <th scope=\"col\">Mínimo</th>\n                  <th scope=\"col\">Último Precio</th>\n                  <th scope=\"col\">Variación Porcentual</th>\n                </tr>\n              </thead>\n                <tbody>{data_stocks.map((d) => (<SellsBuys data={d} data2={data_sell} data3={data_buy} data4={data_update}/>))}</tbody>\n            </table>\n            <p>{\"\\n\\n\"}</p>\n            <table class=\"table table-striped table-dark\" align=\"center\" border=\"5\" frame=\"box\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Nombre Mercado</th>\n                  <th scope=\"col\">Volumen Compra</th>\n                  <th scope=\"col\">Volumen Venta</th>\n                  <th scope=\"col\">Volumen Total</th>\n                  <th scope=\"col\">Cantidad Acciones</th>\n                  <th scope=\"col\">Participación Mercado</th>\n                </tr>\n              </thead>\n                <tbody><Exchanges data={data_exchanges} data2={data_sell} data3={data_buy} data4={data_update}/></tbody>\n\n\n\n            </table> \n            <p>{\"\\n\\n\"}</p> \n        </div>\n    )\n\n}\n\nexport default ConectarWebsocket;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ConectarWebsocket from './components/ConectarWebsocket'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ConectarWebsocket/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}